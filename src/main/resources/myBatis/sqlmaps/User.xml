<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="User">

    <select id="getUserList" resultType="com.project.user.vo.UserVo" >
        SELECT TO_CHAR(x.INDATE + 9/24, 'yyyy-mm-dd hh24:mi') AS INDATE,
               x.u_id,
               x.n_name,
               x.email,
               x.genre1,
               x.genre2,
               x.genre3,
               NVL(y.declaration, 0) declaration
          FROM users x
          LEFT OUTER JOIN
                (SELECT a.u_id,
                        COUNT(b.process) declaration
                   FROM users a
                  INNER JOIN declaration b
                     ON a.u_id = b.ue_id
                  GROUP BY a.u_id) y
            ON x.u_id = y.u_id
         WHERE withdrawal = 'ON'
         ORDER BY INDATE desc
    </select>

    <select id="login"
            resultType="com.project.user.vo.UserVo">
        SELECT U_ID,
        PW,
        N_NAME,
        EMAIL,
        GENRE1,
        GENRE2,
        GENRE3,
        IMG,
        TO_CHAR(INDATE + 9/24, 'yyyy-mm-dd hh24:mi') AS INDATE,
        PCODE,
        WITHDRAWAL,
        AUTHORITY

        FROM  USERS
        WHERE U_ID = #{u_id}
        AND   PW = #{pw}
    </select>

    <select id="getUser"
            resultType="com.project.user.vo.UserVo">
        SELECT U_ID,
        PW,
        N_NAME,
        EMAIL,
        GENRE1,
        GENRE2,
        GENRE3,
        IMG,
        TO_CHAR(INDATE + 9/24, 'yyyy-mm-dd hh24:mi') AS INDATE,
        PCODE,
        WITHDRAWAL,
        AUTHORITY

        FROM  USERS
        WHERE U_ID = #{u_id}
        AND   PW = #{pw}
    </select>

    <select id="authorityCheck"
            resultType="com.project.user.vo.UserVo">
        SELECT U_ID,
               AUTHORITY
          FROM USERS
         WHERE U_ID = #{u_id}
    </select>

    <select id="idCheck"
            resultType="com.project.user.vo.UserVo">
        SELECT U_ID
        FROM USERS
        WHERE U_ID = #{u_id}
    </select>

    <select id="getmail"
            resultType="String">
        SELECT EMAIL
        FROM USERS
        WHERE EMAIL = #{email}
    </select>

    <select id="nnCheck"
            resultType="com.project.user.vo.UserVo">
        SELECT N_NAME
        FROM USERS
        WHERE N_NAME = #{n_name}
    </select>

    <select id="getuserId"
            resultType="String">
        SELECT U_ID
        FROM USERS
        WHERE N_NAME = #{n_name} AND EMAIL = #{email}
    </select>

    <select id="getUserChPw"
            resultType="com.project.user.vo.UserVo">
        SELECT *
        FROM USERS
        WHERE U_ID = #{u_id} AND EMAIL = #{email}
    </select>

    <select id="getckpw"
            resultType="String">
        SELECT PW
        FROM USERS
        WHERE U_ID = #{u_id}
    </select>

    <select id="finduid"
            resultType="String">
        SELECT U_ID
        FROM USERS
        WHERE N_NAME = #{n_name} AND EMAIL = #{email}
    </select>

    <select id="findpw"
            resultType="String">
        SELECT PW
        FROM USERS
        WHERE U_ID = #{u_id} AND EMAIL = #{email}
    </select>

    <select id="getPcode" resultType="String">
        SELECT PCODE
          FROM USERS
         WHERE U_ID = #{u_id}
    </select>

    <update id="UserUpdate">
        UPDATE USERS
           SET N_NAME = #{n_name},
               EMAIL = #{email},
               GENRE1 = #{genre1},
               GENRE2 = #{genre2},
               GENRE3 = #{genre3}
         WHERE U_ID = #{u_id}
    </update>

    <update id="profileupdate">
        UPDATE USERS
           SET IMG = #{vo.fileName}
         WHERE U_ID = #{vo.u_id}
    </update>

    <update id="changePw">
        UPDATE USERS
        SET PCODE = #{pcode},
        PW = #{pw}
        WHERE U_ID = #{u_id}
    </update>

    <insert id="UserInsert"
            parameterType="com.project.user.vo.UserVo">
        INSERT INTO USERS (U_ID, PW, N_NAME, GENRE1, GENRE2, GENRE3, PCODE, EMAIL)
        VALUES (#{u_id}, #{pw}, #{n_name}, #{genre1}, #{genre2}, #{genre3}, #{pcode}, #{email})
    </insert>

    <update id="wirthdwal">
        UPDATE USERS
        SET WITHDRAWAL = #{withdrawal}
        WHERE U_ID = #{u_id}
    </update>

    <select id="count" resultType="int">
        <choose>
            <when test="searchType != a">
                SELECT COUNT(*)
                FROM USERS
                WHERE WITHDRAWAL = 'ON' AND ${searchType} LIKE '%${keyword}%'
            </when>
            <otherwise>
                SELECT COUNT(*)
                FROM USERS
                WHERE WITHDRAWAL = 'ON'
            </otherwise>
        </choose>
    </select>

    <select id="getSUserList" resultType="com.project.user.vo.UserVo" >
        SELECT TO_CHAR(x.INDATE + 9/24, 'yyyy-mm-dd hh24:mi') AS INDATE,
        x.u_id,
        x.n_name,
        x.email,
        x.genre1,
        x.genre2,
        x.genre3,
        NVL(y.declaration, 0) declaration
        FROM users x
        LEFT OUTER JOIN
        (SELECT a.u_id,
        COUNT(b.process) declaration
        FROM users a
        INNER JOIN declaration b
        ON a.u_id = b.ue_id
        GROUP BY a.u_id) y
        ON x.u_id = y.u_id
        WHERE withdrawal = 'ON' AND x.${searchType} LIKE '%${keyword}%'
        ORDER BY INDATE desc
    </select>

</mapper>